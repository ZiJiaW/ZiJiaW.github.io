<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tokio on 一只特立独行的猫</title>
    <link>https://zijiaw.github.io/categories/tokio/</link>
    <description>Recent content in Tokio on 一只特立独行的猫</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 18 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://zijiaw.github.io/categories/tokio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tokio Guide 中文翻译</title>
      <link>https://zijiaw.github.io/posts/a1-tokio/</link>
      <pubDate>Mon, 18 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zijiaw.github.io/posts/a1-tokio/</guid>
      <description>本文是阅读新版tokio文档，顺便翻译之作，啥时候读完啥时候写完咯。
Intruduction 本教程将一步步带你构建一个简化的Redis客户端和服务器。我们首先介绍Rust中异步编程的基本概念，而后实现Redis命令的一个子集。
Mini-Redis 安装完成Rust以后，请安装Mini-Redis服务器程序，这可以用来测试我们的程序：
cargo install mini-redis你可以键入如下命令开始程序：
mini-redis-server而后你可以另起一个命令行，用自带的客户端程序尝试获取键foo：
mini-redis-cli get foo你将看到输出为nil。
Hello Tokio 引入 我们首先编写非常基础的Tokio应用，它将连接到我们的Mini-Redis服务器，插入键值对&amp;lt;hello, world&amp;gt;，而后我们用cli包来获取它，以验证正确性。
首先我们用carge创建新的Rust应用目录：
cargo new my-rediscd my-redis而后编辑Cargo.toml，添加依赖：
tokio = { version = &amp;quot;0.3&amp;quot;, features = [&amp;quot;full&amp;quot;] }mini-redis = &amp;quot;0.3&amp;quot;现在我们可以编辑main.rs，代码如下：
use mini_redis::{client, Result}; #[tokio::main] pub async fn main() -&amp;gt; Result&amp;lt;()&amp;gt; { // Open a connection to the mini-redis address.  let mut client = client::connect(&amp;#34;127.0.0.1:6379&amp;#34;).await?; // Set the key &amp;#34;hello&amp;#34; with value &amp;#34;world&amp;#34;  client.</description>
    </item>
    
  </channel>
</rss>
